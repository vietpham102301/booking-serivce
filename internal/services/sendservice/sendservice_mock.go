// Code generated by MockGen. DO NOT EDIT.
// Source: isend_service.go

// Package sendservice is a generated GoMock package.
package sendservice

import (
	models "booking-service/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockISendService is a mock of ISendService interface.
type MockISendService struct {
	ctrl     *gomock.Controller
	recorder *MockISendServiceMockRecorder
}

// MockISendServiceMockRecorder is the mock recorder for MockISendService.
type MockISendServiceMockRecorder struct {
	mock *MockISendService
}

// NewMockISendService creates a new mock instance.
func NewMockISendService(ctrl *gomock.Controller) *MockISendService {
	mock := &MockISendService{ctrl: ctrl}
	mock.recorder = &MockISendServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISendService) EXPECT() *MockISendServiceMockRecorder {
	return m.recorder
}

// GetAvailableEmpl mocks base method.
func (m *MockISendService) GetAvailableEmpl() (*models.EmployeeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAvailableEmpl")
	ret0, _ := ret[0].(*models.EmployeeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAvailableEmpl indicates an expected call of GetAvailableEmpl.
func (mr *MockISendServiceMockRecorder) GetAvailableEmpl() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAvailableEmpl", reflect.TypeOf((*MockISendService)(nil).GetAvailableEmpl))
}
