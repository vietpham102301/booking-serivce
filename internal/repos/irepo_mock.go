// Code generated by MockGen. DO NOT EDIT.
// Source: irepo.go

// Package repos is a generated GoMock package.
package repos

import (
	models "booking-service/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRepo is a mock of IRepo interface.
type MockIRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIRepoMockRecorder
}

// MockIRepoMockRecorder is the mock recorder for MockIRepo.
type MockIRepoMockRecorder struct {
	mock *MockIRepo
}

// NewMockIRepo creates a new mock instance.
func NewMockIRepo(ctrl *gomock.Controller) *MockIRepo {
	mock := &MockIRepo{ctrl: ctrl}
	mock.recorder = &MockIRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRepo) EXPECT() *MockIRepoMockRecorder {
	return m.recorder
}

// Booking mocks base method.
func (m *MockIRepo) Booking() IBookingRepo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Booking")
	ret0, _ := ret[0].(IBookingRepo)
	return ret0
}

// Booking indicates an expected call of Booking.
func (mr *MockIRepoMockRecorder) Booking() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Booking", reflect.TypeOf((*MockIRepo)(nil).Booking))
}

// MockIBookingRepo is a mock of IBookingRepo interface.
type MockIBookingRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIBookingRepoMockRecorder
}

// MockIBookingRepoMockRecorder is the mock recorder for MockIBookingRepo.
type MockIBookingRepoMockRecorder struct {
	mock *MockIBookingRepo
}

// NewMockIBookingRepo creates a new mock instance.
func NewMockIBookingRepo(ctrl *gomock.Controller) *MockIBookingRepo {
	mock := &MockIBookingRepo{ctrl: ctrl}
	mock.recorder = &MockIBookingRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBookingRepo) EXPECT() *MockIBookingRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIBookingRepo) Create(booking *models.Booking) (*models.Booking, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", booking)
	ret0, _ := ret[0].(*models.Booking)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIBookingRepoMockRecorder) Create(booking interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIBookingRepo)(nil).Create), booking)
}
